name: Master Pipeline

on:
  pull_request:
    branches:
      - main

env:
  TF_IN_AUTOMATION: "True"

jobs:
  format:
    name: Format Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        run: terraform fmt --check --recursive

  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="bucket=${{ vars.BACKEND_BUCKET }}" \
            -backend-config="key=${{ vars.BACKEND_KEY }}" \
            -backend-config="dynamodb_table=${{ vars.BACKEND_TABLE }}"

      - name: Terraform Validate
        run: terraform validate

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="bucket=${{ vars.BACKEND_BUCKET }}" \
            -backend-config="key=${{ vars.BACKEND_KEY }}" \
            -backend-config="dynamodb_table=${{ vars.BACKEND_TABLE }}"

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

  checkov:
    name: Checkov Code
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master

  security:
    name: Secure Code
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.0

  plan:
    name: Plan Code
    runs-on: ubuntu-latest
    needs: [lint, checkov, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="bucket=${{ vars.BACKEND_BUCKET }}" \
            -backend-config="key=${{ vars.BACKEND_KEY }}" \
            -backend-config="dynamodb_table=${{ vars.BACKEND_TABLE }}"

      - name: Terraform Plan
        run: |
          terraform plan -no-color -input=false
